(()=>{"use strict";var e={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"popup__input_invalid",errorClass:"popup__input-error_active"};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function e(t,n,r,o,i){var u=t.name,a=t.link,s=t.likes,c=t._id,l=t.userId,f=t.ownerId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=u,this._link=a,this._id=c,this.likes=s,this._userId=l,this._ownerId=f,this._cardSelector=n,this._handleCardClick=r,this._handleCardLike=o,this._handleDeleteClick=i}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"checkOwnerLike",value:function(){var e=this;return this.likes.some((function(t){return t._id===e._userId}))}},{key:"setLikeImage",value:function(){this._cardLikeButton.classList.toggle("elements__like-button_active",this.checkOwnerLike())}},{key:"renderLike",value:function(e){this.likes=e,this.setLikeNumber(this.likes.length),this.setLikeImage()}},{key:"_setEventListeners",value:function(){var e=this;this._cardLikeButton.addEventListener("click",(function(t){e._handleCardLike()})),this._cardDeleteButton.addEventListener("click",(function(t){e._handleDeleteClick()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick()}))}},{key:"setLikeNumber",value:function(e){this._likeCounter.textContent=e}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".elements__image"),this._cardTitle=this._element.querySelector(".elements__title"),this._cardLikeButton=this._element.querySelector(".elements__like-button"),this._cardDeleteButton=this._element.querySelector(".elements__trash-button"),this._likeCounter=this._element.querySelector(".elements__like-counter"),this._ownerId!=this._userId&&this._cardDeleteButton.remove(),this._setEventListeners(),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardTitle.alt=this._name,this.setLikeNumber(this.likes.length),this.setLikeImage(),this._element}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonSubmit=this._form.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showValidationError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideValidationError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_handleInputValidity",value:function(e){if(e.validity.valid)this._hideValidationError(e);else{var t=e.validationMessage;this._showValidationError(e,t)}}},{key:"_validateInputs",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButton",value:function(){this._validateInputs()?(this._buttonSubmit.classList.add(this._inactiveButtonClass),this._buttonSubmit.disabled=!0):(this._buttonSubmit.classList.remove(this._inactiveButtonClass),this._buttonSubmit.disabled=!1)}},{key:"enableValidation",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._handleInputValidity(t),e._toggleSubmitButton()}))})),this._toggleSubmitButton()}},{key:"cleanErrorForm",value:function(){var e=this;this._inputList.forEach((function(t){e._hideValidationError(t)})),this._toggleSubmitButton()}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_active"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_active"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},c.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__caption"),t}return t=u,(n=[{key:"open",value:function(e,t){this._popupCaption.textContent=e,this._popupImage.src=t,this._popupCaption.alt=e,c(h(u.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(u);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function k(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._handleFormSubmit=t,r._handleFormOpen=n,r.popupForm=r._popup.querySelector(".popup__form"),r.button=r.popupForm.querySelector(".popup__submit-button"),r._inputList=r.popupForm.querySelectorAll(".popup__input"),r}return t=u,(n=[{key:"setButtonText",value:function(e){this.button.textContent=e}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"open",value:function(){b(g(u.prototype),"open",this).call(this),this._handleFormOpen()}},{key:"setEventListeners",value:function(){var e=this;b(g(u.prototype),"setEventListeners",this).call(this),this.popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){b(g(u.prototype),"close",this).call(this),this.popupForm.reset()}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(u);function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function j(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n.popupForm=n._popup.querySelector(".popup__form"),n.button=n.popupForm.querySelector(".popup__submit-button"),n}return t=u,(n=[{key:"setButtonText",value:function(e){this.button.textContent=e}},{key:"open",value:function(){E(P(u.prototype),"open",this).call(this)}},{key:"setDeleteCard",value:function(e,t){this.cardForDelete=e,this.idForDelete=t}},{key:"setEventListeners",value:function(){var e=this;E(P(u.prototype),"setEventListeners",this).call(this),this.popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e.cardForDelete,e.idForDelete),e.setDeleteCard(null,"")}))}},{key:"close",value:function(){E(P(u.prototype),"close",this).call(this),this.popupForm.reset()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(u);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"rendererItems",value:function(e){var t=this;e.reverse().forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){var n=t.userNameSelector,r=t.userInfoSelector,o=t.userAvatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(n),this._userAbout=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userAbout.textContent,avatar:this._userAvatar.src,_id:this._id}}},{key:"editUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._userName.textContent=t,this._userAbout.textContent=n,this._userAvatar.src=r,this._id=o}},{key:"getUserId",value:function(){return this._id}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._getResponseData(e)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponseData(e)}))}},{key:"likeCard",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes/"),{method:t,headers:this._headers}).then((function(e){return n._getResponseData(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var U=document.querySelector(".popup__input_name"),A=document.querySelector(".popup__input_about"),V=document.querySelector(".profile__edit-button"),N=document.querySelector(".profile__add-button"),J=document.querySelector(".profile__avatar-button"),H=new w(".popup_profile",(function(e){var t=this;this.setButtonText("Сохранение..."),Z.setUserInfo(e).then((function(e){Y.editUserInfo(e),H.close()})).catch((function(e){return console.log(e)})).finally((function(){return t.setButtonText("Сохранить")}))}),(function(){var e=Y.getUserInfo();U.value=e.name,A.value=e.about,K.cleanErrorForm()})),M=new w(".popup_card",(function(e){var t=this;this.setButtonText("Сохранение..."),Z.addCard(e).then((function(e){ee(e),M.close()})).catch((function(e){return console.log(e)})).finally((function(){return t.setButtonText("Создать")}))}),(function(){Q.cleanErrorForm()})),z=new I(".popup_delete",(function(e,t){z.setButtonText("Удаление..."),Z.deleteCard(t).then((function(){e.deleteCard(),z.close()})).catch((function(e){return console.log(e)})).finally((function(){return z.setButtonText("Да")}))})),$=new w(".popup_avatar",(function(e){var t=this;this.setButtonText("Сохранение..."),Z.editAvatar(e).then((function(e){Y.editUserInfo(e),$.close()})).catch((function(e){return console.log(e)})).finally((function(){return t.setButtonText("Сохранить")}))}),(function(){W.cleanErrorForm()})),G=new d(".popup_fullscreen"),K=new o(e,H.popupForm),Q=new o(e,M.popupForm),W=new o(e,$.popupForm),X=new B(ee,".elements"),Y=new D({userNameSelector:".profile__name",userInfoSelector:".profile__about",userAvatarSelector:".profile__avatar"}),Z=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-45",headers:{authorization:"62ebdfd5-7936-4ed6-b3c0-2901452931d5","Content-Type":"application/json"}});function ee(e){var t=function(e){var t=new n({name:e.name,link:e.link,likes:e.likes,id:e._id,ownerId:e.owner._id,userId:Y.getUserId()},".elements__template",(function(){return t=e.name,n=e.link,void G.open(t,n);var t,n}),(function(){return function(e,t){var n=e.checkOwnerLike()?"DELETE":"PUT";Z.likeCard(t,n).then((function(t){e.renderLike(t.likes)})).catch((function(e){return console.log(e)}))}(t,e._id)}),(function(){return function(e,t){z.setDeleteCard(e,t),z.open()}(t,e._id)}));return t.generateCard()}(e);X.addItem(t)}Promise.all([Z.getUserInfo(),Z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Y.editUserInfo(o),X.rendererItems(i)})).catch((function(e){return console.log(e)})),K.enableValidation(),Q.enableValidation(),W.enableValidation(),H.setEventListeners(),M.setEventListeners(),$.setEventListeners(),z.setEventListeners(),G.setEventListeners(),V.addEventListener("click",H.open.bind(H)),N.addEventListener("click",M.open.bind(M)),J.addEventListener("click",$.open.bind($))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,